use std::fs::File;
use std::io::Write;
use std::path::Path;

use generator::{generate_king_attacks, generate_knight_attacks, generate_pawn_attacks};

fn main() {
    let out_dir = std::env::var("OUT_DIR").unwrap();
    let file_path = Path::new(&out_dir).join("generated.rs");
    let mut f = File::create(&file_path).unwrap();

    writeln!(f, "// @generated by build.rs\n").unwrap();

    let pawn_attacks = generate_pawn_attacks();
    let knight_attacks = generate_knight_attacks();
    let king_attacks = generate_king_attacks();

    writeln!(
        f,
        "pub static PAWN_ATTACKS: [u64; 128] = [\n{}\n];\n",
        pawn_attacks
            .iter()
            .map(|v| format!("    {}", v.to_repr()))
            .collect::<Vec<_>>()
            .join(",\n")
    )
    .unwrap();

    writeln!(
        f,
        "pub static KNIGHT_ATTACKS: [u64; 64] = [\n{}\n];\n",
        knight_attacks
            .iter()
            .map(|v| format!("    {}", v.to_repr()))
            .collect::<Vec<_>>()
            .join(",\n")
    )
    .unwrap();

    writeln!(
        f,
        "pub static KING_ATTACKS: [u64; 64] = [\n{}\n];\n",
        king_attacks
            .iter()
            .map(|v| format!("    {}", v.to_repr()))
            .collect::<Vec<_>>()
            .join(",\n")
    )
    .unwrap();

    println!("cargo:rerun-if-changed=build.rs");
}
